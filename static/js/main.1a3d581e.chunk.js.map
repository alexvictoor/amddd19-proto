{"version":3,"sources":["SeatsForm.tsx","SeatIcon.tsx","SeatsSuggestions.tsx","ShowSelector.tsx","BookingApp.tsx","configuration.ts","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","selectEmpty","marginTop","spacing","alignItems","button","margin","section","padding","SeatsForm","props","classes","numberOfSeats","searchSeats","specifyNumberOfSeats","react_default","a","createElement","Grid","item","Paper","className","elevation","container","direction","justify","xs","NativeSelect","name","value","onChange","event","Number","parseInt","target","disabled","alignContent","Button","variant","color","onClick","SeatIcon","fontSize","useMediaQuery","SvgIcon","Object","assign","style","objectSpread","d","ExpansionPanel","withStyles","root","border","boxShadow","&:not(:last-child)","borderBottom","&:before","display","&$expanded","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","marginBottom","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","MuiButton","suggestionToString","suggestion","concat","category","totalPrice","seats","join","seatColor","seat","reservationStatus","seatBackgroundColor","includes","SeatsSuggestions","auditorium","suggestions","length","entries","rows","map","_ref","_ref2","slicedToArray","row","key","justifyContent","htmlColor","index","SeatsSuggestions_ExpansionPanel","currentSuggestion","panelIndex","newExpanded","selectSuggestion","SeatsSuggestions_ExpansionPanelSummary","aria-controls","id","Typography","SeatsSuggestions_ExpansionPanelDetails","_ref3","_ref4","SeatsSuggestions_Button","formControl","selectShow","defineProperty","position","borderRadius","shape","fade","palette","common","white","&:hover","marginRight","marginLeft","width","breakpoints","up","ShowSelector","currentShow","shows","AppBar","FormControl","show","initialState","loading","serverUrl","window","location","href","BookingApp","_React$useState","React","useState","_React$useState2","state","setState","mapSuggestionsGroups","group","categoryLabel","s","fetch","then","resp","json","sort","b","displaySeatForm","showId","suggestionsGroups","toConsumableArray","Boolean","hostname","match","ReactDOM","render","src_BookingApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a3d581e.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport React from \"react\";\n\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  \n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    alignItems: 'flex-end',\n  },\n\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  section: {\n    padding: theme.spacing(1, 3),\n    margin: theme.spacing(5, 5),\n  },\n\n}));\n\n\ninterface SeatsFormProps {\n  numberOfSeats: number | 'Unknown',\n  specifyNumberOfSeats: (seats: number) => void,\n  searchSeats: () => void,\n}\n\nexport default function SeatsForm(props: SeatsFormProps) {\n  const classes = useStyles();\n\n  const { numberOfSeats, searchSeats, specifyNumberOfSeats } = props;\n\n  return (\n    <Grid item>\n        <Paper className={classes.section} elevation={5}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n\n          >\n            <Grid item xs={9}>\n              How many tickets do you want to buy?\n            </Grid>\n            <Grid container xs={3} justify='flex-end'>\n              <NativeSelect\n                className={classes.selectEmpty}\n                name=\"ticket-number\"\n                value={numberOfSeats}\n                onChange={event => specifyNumberOfSeats(Number.parseInt(event.target.value, 10))}\n              >\n                <option value=\"Unknown\" disabled={numberOfSeats !== 'Unknown'}>\n                  #\n                </option>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n                <option value={6}>6</option>\n                <option value={7}>7</option>\n                <option value={8}>8</option>\n                <option value={9}>9</option>\n                <option value={10}>10</option>\n                <option value={11}>11</option>\n                <option value={12}>12</option>\n\n              </NativeSelect>\n            </Grid>\n\n            <Grid item alignContent='flex-end'>\n              <Button disabled={numberOfSeats === 'Unknown'} variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => searchSeats()}>\n                  SEARCH\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n  );\n}","import React from \"react\";\nimport { SvgIcon } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nexport default function SeatIcon(props: any) {\n    const displayOnLargeScreen = useMediaQuery('(min-width:768px)');\n    const fontSize = displayOnLargeScreen ? 42 : 18;\n    return (\n        <SvgIcon {...props} style={{ ...props.style, fontSize }} >\n            <path d=\"M4,18V21H7V18H17V21H20V15H4V18M19,10H22V13H19V10M2,10H5V13H2V10M17,13H7V5A2,2 0 0,1 9,3H15A2,2 0 0,1 17,5V13Z\" />\n        </SvgIcon>\n    );\n  }","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiButton from \"@material-ui/core/Button\";\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport SeatIcon from './SeatIcon';\nimport { Grid } from '@material-ui/core';\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nconst Button = withStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n}))(MuiButton);\n\nexport interface Suggestion {\n  totalPrice: number,\n  seats: string[],\n  category: string\n}\n\nexport interface Seat {\n  name: string,\n  category: number,\n  reservationStatus: number,\n}\nexport interface Auditorium {\n  rows: { [row: string]: Seat[] },\n}\ninterface SeatsSuggestionsProps {\n  currentSuggestion: 'Unknown' | number,\n  selectSuggestion: (suggestion: number) => void,\n  suggestions: Suggestion[],\n  auditorium: 'Unknown' | Auditorium\n}\n\nconst suggestionToString = (suggestion: Suggestion) => (\n  `Suggestion for ${suggestion.category} - ${suggestion.totalPrice}€ - ${suggestion.seats.join(', ')}`\n);\n\nconst seatColor = (seat: Seat) => {\n  if (seat.reservationStatus > 0) {\n    return '#b71c1c';\n  }\n  if (seat.category === 1) {\n    return '#ffa000';\n  }\n  if (seat.category === 2) {\n    return '#607d8b';\n  }\n  // 3...\n  return '#009688';\n}\n\nconst seatBackgroundColor = (seat: Seat, suggestion: Suggestion) => {\n  if (suggestion.seats.includes(seat.name)) {\n    return '#ffcdd2';\n  }\n\n  return 'white';\n}\n\nexport default function SeatsSuggestions(props: SeatsSuggestionsProps) {\n\n  const handleChange = (panelIndex: number) => (event: React.ChangeEvent<{}>, newExpanded: boolean) => {\n    if (newExpanded) {\n      props.selectSuggestion(panelIndex);\n    }\n  };\n\n  const { auditorium } = props;\n  if (auditorium === 'Unknown') {\n    return (<div />);\n  }\n\n  if (props.suggestions.length === 0) {\n    return (\n      <Grid\n        container\n        direction=\"column\">\n\n        {Object.entries(auditorium.rows).map(([name, row]) => (\n          <div key={`auditorium_row_${name}`} style={{ display: 'flex', justifyContent: 'center' }}>\n            {row.map(seat => (\n              <SeatIcon key={seat.name} htmlColor={seatColor(seat)} />\n            ))}\n          </div>\n        ))}\n\n      </Grid>\n    );\n  }\n\n  return (\n    <div>\n      {props.suggestions.map((suggestion, index) => (\n        <ExpansionPanel key={`suggestion_${index}`} expanded={index === props.currentSuggestion} onChange={handleChange(index)}>\n          <ExpansionPanelSummary\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>{suggestionToString(suggestion)}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Grid\n              container\n              direction=\"column\">\n\n              {Object.entries(auditorium.rows).map(([name, row]) => (\n                <div key={`row_${index}_${name}`} style={{ display: 'flex', justifyContent: 'center' }}>\n                  {row.map(seat => (\n                    <SeatIcon key={seat.name} htmlColor={seatColor(seat)} style={{ backgroundColor: seatBackgroundColor(seat, suggestion) }} />\n                  ))}\n                </div>\n              ))}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\">\n                <Button disabled={true} variant=\"contained\" color=\"primary\" >\n                  BOOK SEATS\n                    </Button>\n              </Grid>\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      ))}\n    </div>\n  );\n}","import AppBar from '@material-ui/core/AppBar';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport React from \"react\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\n  formControl: {\n    margin: theme.spacing(1),\n    // minWidth: 100\n  },\n\n  selectShow: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.85),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.55),\n    },\n    /*\"&:before\": {\n      borderColor:theme.palette.common.white\n    },*/\n    //color: 'yellow',\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '75%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n\n\n}));\n\ninterface ShowSelectorProps {\n  currentShow: number | 'Unknown',\n  shows: number[],\n  selectShow: (showId: number) => void,\n}\n\n\nexport default function ShowSelector(props: ShowSelectorProps) {\n  const classes = useStyles();\n\n  const { currentShow, shows, selectShow } = props;\n\n  return (\n    <AppBar position=\"sticky\" style={{ width: '100%' }}>\n      <FormControl className={classes.formControl}>\n        <NativeSelect\n          className={classes.selectShow}\n          /*value={values.age}*/\n          name=\"showId\"\n          onChange={event => selectShow(Number.parseInt(event.target.value, 10))}\n        >\n          <option value=\"\" disabled={currentShow !== 'Unknown'}>\n            Show id\n          </option>\n          {shows\n            .map(show => (\n              <option key={show} value={show}>Show {show}</option>\n          ))}\n\n        </NativeSelect>\n      </FormControl>\n    </AppBar>\n  );\n}\n","import Grid from '@material-ui/core/Grid';\nimport React from \"react\";\nimport getServerUrl from \"./configuration\";\nimport SeatsForm from \"./SeatsForm\";\nimport SeatsSuggestions, { Suggestion } from './SeatsSuggestions';\nimport ShowSelector from './ShowSelector';\n\n\n\n\ninterface BookingAppState {\n  loading: boolean,\n  currentShow: number | 'Unknown',\n  numberOfSeats: number | 'Unknown',\n  shows: number[],\n  suggestions: Suggestion[],\n  currentSuggestion: number | 'Unknown',\n  auditorium: { rows: any } | 'Unknown',\n}\n\nconst initialState: BookingAppState = {\n  loading: true,\n  shows: [],\n  currentShow: 'Unknown',\n  auditorium: 'Unknown',\n  numberOfSeats: 'Unknown',\n  suggestions: [],\n  currentSuggestion: 'Unknown',\n}\n\nconst serverUrl = getServerUrl(window.location.href);\n\nfunction BookingApp() {\n\n  const [state, setState] = React.useState(initialState);\n\n  const selectShow = (showId: number) => {\n    fetch(`${serverUrl}/shows/${showId}`)\n      .then(resp => resp.json())\n      .then(auditorium => {\n        setState({\n          ...state,\n          currentShow: showId,\n          auditorium,\n          numberOfSeats: 'Unknown',\n          suggestions: [],\n          currentSuggestion: 'Unknown',\n        })\n      });\n    // http://localhost:4246/api/auditorium-seating/\n  }\n\n  const specifyNumberOfSeats = (numberOfSeats: number) => {\n    setState({\n      ...state,\n      numberOfSeats,\n    });\n  }\n\n  const mapSuggestionsGroups = (category: number | 'Mixed', group: any) => {\n    if (!group) {\n      return [];\n    }\n    const categoryLabel = category === 'Mixed' ? 'Mixed' : `Category ${category}`;\n    return group.map((s: any) => ({ category: categoryLabel, seats: s.seats, totalPrice: s.totalPrice}))\n  }\n\n  const searchSeats = () => {\n    fetch(`${serverUrl}/shows/${state.currentShow}/suggestions?&party=${state.numberOfSeats}`)\n      .then(resp => resp.json())\n      .then(suggestionsGroups => {\n        setState({\n          ...state,\n          currentSuggestion: 0,\n          suggestions: [\n            ...mapSuggestionsGroups(1, suggestionsGroups['suggestionsForFirstCategory']),\n            ...mapSuggestionsGroups(2, suggestionsGroups['suggestionsForSecondCategory']),\n            ...mapSuggestionsGroups(3, suggestionsGroups['suggestionsForThirdCategory']),\n            ...mapSuggestionsGroups('Mixed', suggestionsGroups['suggestionsForMixedCategory']),\n          ]\n        })\n      });\n  }\n\n  const selectSuggestion = (suggestion: number) => {\n    setState({\n      ...state,\n      currentSuggestion: suggestion,\n    });\n  }\n\n  if (state.loading) {\n    fetch(`${serverUrl}/shows`)\n      .then(resp => resp.json())\n      .then((shows: string[]) => setState({\n        ...initialState,\n        loading: false,\n        shows: shows\n                .map(show => Number.parseInt(show, 10))\n                .sort((a, b) => a - b)\n      })\n    );\n    return (\n      <div>Loading...</div>\n    );\n  }\n\n  const displaySeatForm = (state.currentShow !== 'Unknown') && (state.suggestions.length === 0);\n\n  return (\n    <div>\n\n      <ShowSelector \n        currentShow={state.currentShow} \n        shows={state.shows} \n        selectShow={selectShow} \n      />\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n      >\n        \n        <br/>\n\n        <SeatsSuggestions \n          suggestions={state.suggestions} \n          currentSuggestion={state.currentSuggestion} \n          auditorium={state.auditorium} \n          selectSuggestion={selectSuggestion}\n        />\n\n        {displaySeatForm && <SeatsForm \n          numberOfSeats={state.numberOfSeats} \n          searchSeats={searchSeats} \n          specifyNumberOfSeats={specifyNumberOfSeats} \n        />}\n\n      </Grid>\n    </div>\n  );\n}\n\nexport default BookingApp;\n","export default function getServerUrl(appUrl: string) {\n    const ngrok = true;\n    if (ngrok) {\n        return 'http://2d435709.ngrok.io/api'\n    }\n    return 'http://localhost:4243/api';\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BookingApp from './BookingApp';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BookingApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}