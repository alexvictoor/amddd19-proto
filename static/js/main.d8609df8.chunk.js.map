{"version":3,"sources":["SeatsForm.tsx","SeatIcon.tsx","SeatsSuggestions.tsx","ShowSelector.tsx","BookingApp.tsx","configuration.ts","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","formControl","margin","spacing","selectEmpty","marginTop","alignItems","selectShow","Object","defineProperty","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","color","marginRight","marginLeft","width","breakpoints","up","container","textField","dense","button","section","padding","formArea","auditauriumArea","SeatsForm","props","classes","numberOfSeats","searchSeats","specifyNumberOfSeats","react_default","a","createElement","Grid","item","Paper","className","elevation","direction","justify","xs","NativeSelect","name","onChange","event","Number","parseInt","target","value","disabled","alignContent","Button","variant","onClick","SeatIcon","fontSize","useMediaQuery","SvgIcon","assign","style","objectSpread","d","ExpansionPanel","withStyles","border","boxShadow","&:not(:last-child)","borderBottom","&:before","&$expanded","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","suggestionToString","suggestion","concat","category","totalPrice","seats","join","SeatsSuggestions","_React$useState","React","useState","_React$useState2","slicedToArray","setExpanded","auditorium","seatColor","seat","seatBackgroundColor","includes","reservationStatus","suggestions","map","index","SeatsSuggestions_ExpansionPanel","key","panelIndex","newExpanded","SeatsSuggestions_ExpansionPanelSummary","aria-controls","id","Typography","SeatsSuggestions_ExpansionPanelDetails","entries","rows","_ref","_ref2","row","justifyContent","ShowSelector","currentShow","shows","AppBar","FormControl","show","initialState","loading","serverUrl","window","location","href","BookingApp","state","setState","mapSuggestionsGroups","group","categoryLabel","s","fetch","then","resp","json","sort","b","showId","suggestionsGroups","toConsumableArray","Boolean","hostname","match","ReactDOM","render","src_BookingApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8609df8.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport React from \"react\";\n\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    // minWidth: 100\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    alignItems: 'flex-end',\n  },\n  selectShow: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    /*\"&:before\": {\n      borderColor:theme.palette.common.white\n    },*/\n    color: 'white',\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '75%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  section: {\n    padding: theme.spacing(1, 3),\n    margin: theme.spacing(5, 5),\n  },\n\n  formArea: {\n    margin: theme.spacing(5, 5),\n  },\n\n  auditauriumArea: {\n    margin: theme.spacing(1, 1),\n  }\n\n\n}));\n\n\ninterface SeatsFormProps {\n  numberOfSeats: number | 'Unknown',\n  specifyNumberOfSeats: (seats: number) => void,\n  searchSeats: () => void,\n}\n\nexport default function SeatsForm(props: SeatsFormProps) {\n  const classes = useStyles();\n\n  const { numberOfSeats, searchSeats, specifyNumberOfSeats } = props;\n\n  return (\n    <Grid item>\n        <Paper className={classes.section} elevation={5}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n\n          >\n            <Grid item xs={9}>\n              How many tickets do you want to buy?\n            </Grid>\n            <Grid container xs={3} justify='flex-end'>\n              <NativeSelect\n                className={classes.selectEmpty}\n                name=\"ticket-number\"\n                onChange={event => specifyNumberOfSeats(Number.parseInt(event.target.value, 10))}\n              >\n                <option value=\"\" disabled={numberOfSeats !== 'Unknown'}>\n                  #\n                </option>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n                <option value={6}>6</option>\n                <option value={7}>7</option>\n                <option value={8}>8</option>\n                <option value={9}>9</option>\n                <option value={10}>10</option>\n                <option value={11}>11</option>\n                <option value={12}>12</option>\n\n              </NativeSelect>\n            </Grid>\n{/**\n\n\n\n\n\n\n            <Grid item xs={9}>\n              Choose a pricing category\n            </Grid>\n            <Grid container xs={3} justify='flex-end'>\n              <NativeSelect\n                className={classes.selectEmpty}\n                name=\"category\"\n              >\n                <option value=\"\" disabled>\n                  Category\n                </option>\n                <option value={10}>Category 1</option>\n                <option value={20}>Category 2</option>\n                <option value={30}>Category 3</option>\n              </NativeSelect>\n            </Grid>\n*/}\n            <Grid item alignContent='flex-end'>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => searchSeats()}>\n                  SEARCH\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n  );\n}","import React from \"react\";\nimport { SvgIcon } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nexport default function SeatIcon(props: any) {\n    const displayOnLargeScreen = useMediaQuery('(min-width:768px)');\n    const fontSize = displayOnLargeScreen ? 42 : 18;\n    return (\n        <SvgIcon {...props} style={{ ...props.style, fontSize }} >\n            <path d=\"M4,18V21H7V18H17V21H20V15H4V18M19,10H22V13H19V10M2,10H5V13H2V10M17,13H7V5A2,2 0 0,1 9,3H15A2,2 0 0,1 17,5V13Z\" />\n        </SvgIcon>\n    );\n  }","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport SeatIcon from './SeatIcon';\nimport { Grid } from '@material-ui/core';\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nexport interface Suggestion {\n  totalPrice: number,\n  seats: string[],\n  category: string\n}\n\nexport interface Seat {\n  name: string,\n  category: number,\n  reservationStatus: number,\n} \nexport interface Auditorium {\n  rows: {[row: string]: Seat[]},\n} \ninterface SeatsSuggestionsProps {\n  suggestions: Suggestion[],\n  auditorium: 'Unknown' | Auditorium\n}\n\nconst suggestionToString = (suggestion: Suggestion) => (\n  `${suggestion.category} - ${suggestion.totalPrice}€ - ${suggestion.seats.join(', ')}`\n);\n\nexport default function SeatsSuggestions(props: SeatsSuggestionsProps) {\n\n  const [expanded, setExpanded] = React.useState<number | false>(0);\n\n  const handleChange = (panelIndex: number) => (event: React.ChangeEvent<{}>, newExpanded: boolean) => {\n    setExpanded(newExpanded ? panelIndex : false);\n  };\n\n  const { auditorium } = props;\n  if (auditorium === 'Unknown') {\n    return (<div/>); \n  }\n\n  const seatColor = (seat: Seat, suggestion: Suggestion) => {\n    if (seat.category === 1) {\n      return 'primary';\n    }\n    return 'action';\n  }\n\n  const seatBackgroundColor = (seat: Seat, suggestion: Suggestion) => {\n    if (suggestion.seats.includes(seat.name)) {\n      return 'yellow';\n    }\n    if (seat.reservationStatus > 0) {\n      return 'pink';\n    }\n   \n    return 'white';\n  }\n\n  return (\n    <div>\n      {props.suggestions.map((suggestion, index) => (\n        <ExpansionPanel key={`suggestion_${index}`} expanded={index === expanded} onChange={handleChange(index)}>\n          <ExpansionPanelSummary\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>{suggestionToString(suggestion)}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Grid\n              container\n              direction=\"column\">\n\n            { Object.entries(auditorium.rows).map(([name, row]) => (\n              <div key={`row_${index}_${name}`} style={{ display: 'flex', justifyContent: 'center' }}>\n                { row.map(seat => (\n                  <SeatIcon key={seat.name} color={seatColor(seat, suggestion)}  style={{ backgroundColor: seatBackgroundColor(seat, suggestion) }} />\n                )) }\n              </div>\n            ))}\n\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      ))}\n    </div>\n  );\n}","import AppBar from '@material-ui/core/AppBar';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport React from \"react\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\n  formControl: {\n    margin: theme.spacing(1),\n    // minWidth: 100\n  },\n\n  selectShow: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    /*\"&:before\": {\n      borderColor:theme.palette.common.white\n    },*/\n    color: 'white',\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '75%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n\n\n}));\n\ninterface ShowSelectorProps {\n  currentShow: number | 'Unknown',\n  shows: number[],\n  selectShow: (showId: number) => void,\n}\n\n\nexport default function ShowSelector(props: ShowSelectorProps) {\n  const classes = useStyles();\n\n  const { currentShow, shows, selectShow } = props;\n\n  return (\n    <AppBar position=\"sticky\" style={{ width: '100%' }}>\n      <FormControl className={classes.formControl}>\n        <NativeSelect\n          className={classes.selectShow}\n          /*value={values.age}*/\n          name=\"showId\"\n          onChange={event => selectShow(Number.parseInt(event.target.value, 10))}\n        >\n          <option value=\"\" disabled={currentShow !== 'Unknown'}>\n            Show id\n          </option>\n          {shows\n            .map(show => (\n              <option key={show} value={show}>Show {show}</option>\n          ))}\n\n        </NativeSelect>\n      </FormControl>\n    </AppBar>\n  );\n}\n","import Grid from '@material-ui/core/Grid';\nimport React from \"react\";\nimport getServerUrl from \"./configuration\";\nimport SeatsForm from \"./SeatsForm\";\nimport SeatsSuggestions, { Suggestion } from './SeatsSuggestions';\nimport ShowSelector from './ShowSelector';\n\n\n\n\ninterface BookingAppState {\n  loading: boolean,\n  currentShow: number | 'Unknown',\n  numberOfSeats: number | 'Unknown',\n  shows: number[],\n  suggestions: Suggestion[],\n  auditorium: { rows: any } | 'Unknown',\n}\n\nconst initialState: BookingAppState = {\n  loading: true,\n  currentShow: 'Unknown',\n  numberOfSeats: 'Unknown',\n  shows: [],\n  suggestions: [],\n  auditorium: 'Unknown',\n}\n\nconst serverUrl = getServerUrl(window.location.href);\n\nfunction BookingApp() {\n\n  const [state, setState] = React.useState(initialState);\n\n  const selectShow = (showId: number) => {\n    fetch(`${serverUrl}/shows/${showId}`)\n      .then(resp => resp.json())\n      .then(auditorium => {\n        setState({\n          ...state,\n          currentShow: showId,\n          auditorium\n        })\n      });\n    // http://localhost:4246/api/auditorium-seating/\n  }\n\n  const specifyNumberOfSeats = (numberOfSeats: number) => {\n    setState({\n      ...state,\n      numberOfSeats,\n    });\n  }\n\n  const mapSuggestionsGroups = (category: number | 'Mixed', group: any) => {\n    if (!group) {\n      return [];\n    }\n    const categoryLabel = category === 'Mixed' ? 'Mixed' : `Category ${category}`;\n    return group.map((s: any) => ({ category: categoryLabel, seats: s.seats, totalPrice: s.totalPrice}))\n  }\n\n  const searchSeats = () => {\n    fetch(`${serverUrl}/shows/${state.currentShow}/suggestions?&party=${state.numberOfSeats}`)\n      .then(resp => resp.json())\n      .then(suggestionsGroups => {\n        setState({\n          ...state,\n          suggestions: [\n            ...mapSuggestionsGroups(1, suggestionsGroups['suggestionsForFirstCategory']),\n            ...mapSuggestionsGroups(2, suggestionsGroups['suggestionsForSecondCategory']),\n            ...mapSuggestionsGroups(3, suggestionsGroups['suggestionsForThirdCategory']),\n            ...mapSuggestionsGroups('Mixed', suggestionsGroups['suggestionsForMixedCategory']),\n          ]\n        })\n      });\n  }\n\n  if (state.loading) {\n    fetch(`${serverUrl}/shows`)\n      .then(resp => resp.json())\n      .then((shows: string[]) => setState({\n        ...initialState,\n        loading: false,\n        shows: shows\n                .map(show => Number.parseInt(show, 10))\n                .sort((a, b) => a - b)\n      })\n    );\n    return (\n      <div>Loading...</div>\n    );\n  }\n\n  return (\n    <div>\n\n      <ShowSelector currentShow={state.currentShow} shows={state.shows} selectShow={selectShow} />\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n      //alignItems=\"stretch\"\n      //className=\"formArea\"\n      //spacing={0}\n      >\n\n        <SeatsForm numberOfSeats={state.numberOfSeats} searchSeats={searchSeats} specifyNumberOfSeats={specifyNumberOfSeats} />\n        <SeatsSuggestions suggestions={state.suggestions} auditorium={state.auditorium} />\n\n      </Grid>\n    </div>\n  );\n}\n\nexport default BookingApp;\n","export default function getServerUrl(appUrl: string) {\n    // TODO azure url\n    return 'http://localhost:4243/api';\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BookingApp from './BookingApp';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BookingApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}